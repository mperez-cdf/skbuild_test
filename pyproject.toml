[build-system]
requires = [
  "setuptools>=61.0",
  "setuptools_scm[toml]>=3.4",
  "scikit-build>=0.14",
]
build-backend = "setuptools.build_meta"

[project]
name = "skbuild_only"  # you'll be able to pip install this name
# version = "0.1.0"  # dynamic with setuptools_scm
dynamic = ["version"]
# Who is an author or a maintaner ? There's no official definition.
authors = [
  { name = "Matthieu Perez", email = "me@email.com" },
]
maintainers = [
  { name = "The Scikit-HEP admins", email = "scikit-hep-admins@googlegroups.com" },
]
description = "là c'est la petite description du package skbuild_only"
readme = "README.md"  # et là la longue description
requires-python = ">=3.7"  # best if only minimal version is specified
# list of valid classifiers: https://pypi.org/classifiers/
#  At least put:
#  - which version(s) of Python your package works on,
#  - which license your package is available under,
#  - which operating systems your package will work on.
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
# The project packages requirements
dependencies = [
  "typing_extensions >=3.7; python_version<'3.8'",  # type hints
]

# Optional installations
[project.optional-dependencies]
# For the test environment
test = [
  "pytest >=6",
  "pytest-cov >=3",
]
# For actively developping the package
dev = [
  "pipdeptree",
  "skbuild_only[test]",
]
docs = [
  "Sphinx>=4.0",
  "myst_parser>=0.13",
  "sphinx-book-theme>=0.1.0",
  "sphinx_copybutton",
]

[project.urls]
Homepage = "https://github.com/Scikit-HEP/setuptools621"
"Bug Tracker" = "https://github.com/Scikit-HEP/setuptools621/issues"
Discussions = "https://github.com/Scikit-HEP/setuptools621/discussions"
Changelog = "https://github.com/Scikit-HEP/setuptools621/releases"


[tool.setuptools_scm]
write_to = "src/skbuild_only/_version.py"


[tool.cibuildwheel]
test-extras = ["test"]
test-command = "pytest {project}/tests"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = [
  "tests",
]


[tool.mypy]
files = "src"
python_version = "3.7"
warn_unused_configs = true
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true


[tool.check-manifest]
ignore = [
  ".github/**",
  "docs/**",
  ".pre-commit-config.yaml",
  ".readthedocs.yml",
  "src/*/_version.py",
  "noxfile.py",
]

[tool.isort]
profile = "black"


[tool.pylint]
py-version = "3.7"
ignore-paths= ["src/skbuild_only/_version.py"]
extension-pkg-allow-list = ["skbuild_only._core"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "wrong-import-position",
]
